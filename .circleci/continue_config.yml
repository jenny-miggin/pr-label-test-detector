version: 2.1

orbs:
    node: circleci/node@3.0.1

parameters:
  api:
    type: boolean
    default: false
  auth:
    type: boolean
    default: false
  e2e:
    type: boolean
    default: false
  unit:
    type: boolean
    default: false
  bug:
    type: boolean
    default: false
  build-and-test:
    type: boolean
    default: false
  rerun-mode:
    type: boolean
    default: false

jobs:
  rerun-failed-tests:
    docker:
      - image: cimg/node:12.16
    steps:
      - checkout
      - run:
          name: Check for failed jobs on this branch
          command: ./circleci-scripts/find-failed-jobs.sh
      - run:
          name: Tell me my failed jobs name and ID
          command: |
            cat "$FAILED_JOB_INFO"
      - run:
          name: Find failed tests
          command: ./circleci-scripts/find-failed-tests.sh && echo "$FAILED_TESTS"
      - node/install-packages:
          pkg-manager: yarn      
      - run: mkdir ~/junit
      - run:
          name: Rerun the failed tests
          command: |
            # FAILED_TESTS_LIST is generated by find-failed-tests.sh
            LIST=$(cat $FAILED_TESTS_LIST)
            yarn test $LIST
      - run:
          command: cp junit.xml ~/junit/
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit
  build-and-test:
      docker:
          - image: cimg/node:12.16
      parallelism: 5
      steps:
          - checkout
          - node/install-packages:
              pkg-manager: yarn      
          - run: mkdir ~/junit
          - run:
              name: Test application
              command: |
                  TEST=$(circleci tests glob "src/__tests__/*.js" | circleci tests split --split-by=timings)
                  yarn test $TEST
          - run:
              command: cp junit.xml ~/junit/
              when: always
          - store_test_results:
              path: ~/junit
          - store_artifacts:
              path: ~/junit
  generic:
    docker:
      - image: cimg/base:2024.07
    steps: 
      - run: 
          name: Generic job that always runs
          command: echo "Generic job that always runs"
  bug-job:
    docker:
      - image: cimg/base:2024.07
    steps: 
      - run: 
          name: Job that runs when bug label is set
          command: echo "I got bugs"
  api-build:
    docker:
      - image: cimg/base:2024.07
    steps:
      - run:
          name: echo Hello
          command: |
            echo "This is the API project"
  auth-build:
    docker:
      - image: cimg/base:2024.07
    steps:
      - run:
          name: echo Hello
          command: |
            echo "This is the AUTH project"
  e2e-tests:
    docker:
      - image: cimg/base:2024.07
    steps:
      - run:
          name: echo Testing
          command: |
            echo "This is the e2e tests"
  unit-tests:
    docker:
      - image: cimg/base:2024.07
    steps:
      - run:
          name: echo Hello
          command: |
            echo "This is the unit tests"
workflows:
  api:
    when: 
      or:
        - << pipeline.parameters.api >>
        - << pipeline.parameters.unit >>
    jobs:
      - api-build
      - unit-tests:
          requires:
            - api-build
  auth:
    when: << pipeline.parameters.auth >>
    jobs:
      - auth-build
  e2e:
    when: << pipeline.parameters.e2e >>
    jobs:
      - e2e-tests
  always-run: 
    jobs:
      - generic
  bug-workflow: 
    when: << pipeline.parameters.bug >>
    jobs:
      - bug-job
  build-and-test:
    when: << pipeline.parameters.build-and-test >>
    jobs:
      - build-and-test
  rerun-failed-tests:
    when: << pipeline.parameters.rerun-mode >>
    jobs:
      - rerun-failed-tests:
          context: dynamic-prs